<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Task;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskRepository extends \Doctrine\ORM\EntityRepository
{
    public function findGrouped($archived = false, $limit = false, $offset = false)
    {
        $qb = $this->createQueryBuilder('t');
        $method = ($archived) ? 'isNotNull' : 'isNull';
        $qb->andWhere($qb->expr()->$method('t.archivedAt'));

        if ($limit) {
            $qb->setMaxResults($limit);
        }

        if ($offset) {
            $qb->setFirstResult($offset);
        }

        $items = $qb->getQuery()->execute();
        $groups = [];

        foreach (Task::getSupportedStatuses() as $status) {
            $groups[$status] = [];
        }

        foreach ($items as $item) {
            /** @var Task $item */
            $groups[$item->getStatus()][] = $item;
        }

        return $groups;
    }

    public function countArchived()
    {
        $qb = $this->createQueryBuilder('t');
        $qb->select('COUNT(t)')
           ->where($qb->expr()->isNotNull('t.archivedAt'));

        return $qb->getQuery()->getSingleScalarResult();
    }
}
